// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  articles      Article[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Article {
  id            String    @id @default(cuid())
  title         String
  content       String
  excerpt       String
  slug          String    @unique
  featuredImage String?
  published     Boolean   @default(false)
  publishedAt   DateTime?
  views         Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  authorId      String
  categoryId    String
  author        User      @relation(fields: [authorId], references: [id])
  category      Category  @relation(fields: [categoryId], references: [id])
  tags          ArticleTag[]
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  slug        String    @unique
  description String?
  color       String?   @default("#3B82F6")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  articles    Article[]
}

model Tag {
  id        String       @id @default(cuid())
  name      String       @unique
  slug      String       @unique
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  articles  ArticleTag[]
}

model ArticleTag {
  articleId String
  tagId     String
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([articleId, tagId])
}

model AdminSettings {
  id                     String   @id @default(cuid())
  siteName               String   @default("Veritas Bulletin")
  siteDescription        String   @default("Your trusted source for Filipino news and insights")
  logoUrl                String?
  primaryColor           String   @default("#3B82F6")
  secondaryColor         String   @default("#1F2937")
  articlesPerPage        Int      @default(12)
  featuredArticlesCount  Int      @default(6)
  enableComments         Boolean  @default(true)
  enableNewsletter       Boolean  @default(true)
  facebookUrl            String?
  twitterUrl             String?
  instagramUrl           String?
  linkedinUrl            String?
  updatedAt              DateTime @updatedAt
}


model Layout {
  id        Int      @id
  template  Json
  itemCount Int
  updatedAt DateTime @updatedAt
}


enum Role {
  USER
  ADMIN
}
